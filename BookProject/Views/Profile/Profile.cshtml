@model BookProject.Models.UserProfileViewModel

@{
    ViewBag.Title = "User Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

  
    
    
    <div class="row">
        <!-- User Information -->
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h3>User Information</h3>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("UpdateProfile", "Profile", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(m => m.UserId)

                        <div class="form-group">
                            @Html.LabelFor(m => m.Username)
                            @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(m => m.Email)
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>

                            <div class="form-group mt-3">
                                @Html.LabelFor(m => m.Address)
                                @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mt-3">
                                @Html.LabelFor(m => m.ZipCode)
                                @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ZipCode, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mt-3">
                                @Html.LabelFor(m => m.City)
                                @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mt-3">
                                @Html.LabelFor(m => m.PhoneNumber)
                                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                            </div>

                        <div class="form-group mt-3">
                            <label>Registration Date</label>
                            <div class="form-control" readonly>
                                @Model.CreatedAt
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary mt-3">Save Changes</button>
                    }
                </div>
            </div>

            <!-- Password Change Section -->
            <div class="card">
                <div class="card-header">
                    <h3>Change Password</h3>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("ChangePassword", "Profile", FormMethod.Post, new { id = "passwordForm" }))
                    {
                        @Html.AntiForgeryToken()
                        
                        <div class="form-group">
                            @Html.LabelFor(m => m.CurrentPassword)
                            @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(m => m.NewPassword)
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-3">
                            @Html.LabelFor(m => m.ConfirmNewPassword)
                            @Html.PasswordFor(m => m.ConfirmNewPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ConfirmNewPassword, "", new { @class = "text-danger" })
                        </div>

                        <button type="submit" class="btn btn-warning mt-3">Change Password</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            // Success/Error message fade out
            setTimeout(function () {
                $(".alert").fadeOut('slow');
            }, 3000);

            // Handle password form submission
            $("#passwordForm").submit(function (e) {
                e.preventDefault();
                
                var formData = $(this).serialize();
                
                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            // Clear password fields
                            $("#CurrentPassword, #NewPassword, #ConfirmNewPassword").val('');
                            
                            // Show success message
                            $("<div class='alert alert-success'>Password changed successfully!</div>")
                                .insertBefore("#passwordForm")
                                .fadeOut(3000);
                        } else {
                            // Show error message
                            $("<div class='alert alert-danger'>" + response.message + "</div>")
                                .insertBefore("#passwordForm")
                                .fadeOut(3000);
                        }
                    },
                    error: function () {
                        // Show error message
                        $("<div class='alert alert-danger'>An error occurred. Please try again.</div>")
                            .insertBefore("#passwordForm")
                            .fadeOut(3000);
                    }
                });
            });
        });
    </script>
}
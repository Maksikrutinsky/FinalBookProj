@model BookProject.Models.CheckoutViewModel

<style>
    .mainscreen {
        padding-top: 120px;
        min-height: calc(100vh - 140px);
    }

    .card {
        width: 75rem;
        margin: 2rem auto;
        background: rgba(228, 244, 242, 0.7);
        position: relative;
        border-radius: 1.5rem;
        box-shadow: 4px 3px 20px rgba(53, 53, 53, 0.55);
        display: flex;
        flex-direction: row;
        min-height: 600px;
    }

    .leftside {
        background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.5)),
        url('https://images.unsplash.com/photo-1481627834876-b7833e8f5570?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=228&q=80');
        background-size: cover;
        background-position: center;
        width: 35rem;
        display: flex;
        align-items: center;
        justify-content: center;
        border-top-left-radius: 1.5rem;
        border-bottom-left-radius: 1.5rem;
        flex-direction: column;
        padding: 3rem;
        color: white;
        position: relative;
    }

    .leftside::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(117, 51, 112, 0.2), rgba(41, 128, 150, 0.2));
        border-top-left-radius: 1.5rem;
        border-bottom-left-radius: 1.5rem;
    }

    /* עדכון שאר הסגנונות לשיפור הקריאות עם הרקע השקוף יותר */
    .order-summary {
        position: relative;
        z-index: 1;
        background: rgba(0, 0, 0, 0.3);
        padding: 2rem;
        border-radius: 1rem;
        backdrop-filter: blur(5px);
    }

    .order-item {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 0.5rem;
        margin-bottom: 1rem;
        padding: 1rem;
        border: none;
    }

    .total-amount {
        margin-top: 2rem;
        padding-top: 1.5rem;
        border-top: 1px solid rgba(255, 255, 255, 0.2);
        font-size: 1.8rem;
        color: #ffffff;
        font-weight: bold;
    }

    .rightside {
        background-color: rgba(228, 244, 242, 0.7);
        width: 40rem;
        border-bottom-right-radius: 1.5rem;
        border-top-right-radius: 1.5rem;
        padding: 3rem;
    }

    .rightside h1 {
        color: #963E7B;
        margin-bottom: 2rem;
        font-size: 2.8rem;
    }

    .rightside h2 {
        color: #615a5a;
        font-size: 2rem;
        margin-bottom: 2rem;
    }

    .form-group {
        margin-bottom: 2rem;
    }

    .form-group label {
        display: block;
        font-size: 1.4rem;
        color: #615a5a;
        margin-bottom: 0.8rem;
    }

    .inputbox {
        width: 100%;
        padding: 1.2rem;
        border: none;
        border-bottom: 2px solid #ccc;
        border-radius: 0.5rem;
        font-size: 1.3rem;
        color: #615a5a;
        transition: all 0.3s ease;
    }

    .inputbox:focus {
        outline: none;
        border-bottom: 3px solid #963E7B;
    }

    .expcvv {
        display: flex;
        gap: 3rem;
        margin-top: 1.5rem;
    }

    .expcvv > div {
        flex: 1;
    }

    .button {
        background: linear-gradient(135deg, #753370 0%, #298096 100%);
        width: 100%;
        padding: 1.5rem;
        border: none;
        border-radius: 50px;
        color: white;
        font-size: 1.5rem;
        font-weight: 500;
        letter-spacing: 0.11rem;
        cursor: pointer;
        transition: all 0.3s ease;
        margin-top: 3rem;
    }

    .button:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    }

    .text-danger {
        color: #dc3545;
        font-size: 1rem;
        margin-top: 0.5rem;
    }
</style>

<div class="mainscreen">
    <div class="card">
        <div class="leftside">
            <div class="order-summary">
                <h2>Order Summary</h2>
                @foreach (var item in Model.Items)
                {
                    <div class="order-item">
                        <span>@item.Book.Title</span>
                        <span>$@item.Price</span>
                    </div>
                }
                <div class="total-amount">
                    Total: $@Model.TotalAmount
                </div>
            </div>
        </div>

        <div class="rightside">
            @using (Html.BeginForm("ProcessPayment", "Cart", FormMethod.Post))
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <h1>Checkout</h1>
                <h2>Payment Information</h2>

                <div class="form-group">
                    <label>Card Number</label>
                    @Html.TextBoxFor(m => m.Payment.CardNumber, new { @class = "inputbox", placeholder = "1234 5678 9012 3456" })
                    @Html.ValidationMessageFor(m => m.Payment.CardNumber, "", new { @class = "text-danger" })
                </div>

                <div class="expcvv">
                    <div class="form-group">
                        <label>Expiry Date</label>
                        @Html.TextBoxFor(m => m.Payment.ExpiryDate, new { @class = "inputbox", placeholder = "MM/YY" })
                        @Html.ValidationMessageFor(m => m.Payment.ExpiryDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label>CVV</label>
                        @Html.TextBoxFor(m => m.Payment.CVV, new { @class = "inputbox", placeholder = "123" })
                        @Html.ValidationMessageFor(m => m.Payment.CVV, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.HiddenFor(m => m.TotalAmount)
                <button type="submit" class="button">Complete Payment</button>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            // Card number formatting
            $('#Payment_CardNumber').on('input', function() {
                $(this).val($(this).val().replace(/\D/g, ''));
                let value = $(this).val();
                if (value.length > 0) {
                    value = value.match(/.{1,4}/g).join(' ');
                }
                $(this).val(value);
            });

            // Expiry date formatting
            $('#Payment_ExpiryDate').on('input', function() {
                let value = $(this).val().replace(/\D/g, '');
                if (value.length >= 2) {
                    value = value.substring(0,2) + '/' + value.substring(2);
                }
                $(this).val(value);
            });

            // CVV formatting
            $('#Payment_CVV').on('input', function() {
                $(this).val($(this).val().replace(/\D/g, ''));
            });
        });
    </script>
}
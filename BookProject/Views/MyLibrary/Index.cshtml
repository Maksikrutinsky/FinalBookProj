@model BookProject.Models.MyLibraryViewModel

<style>
    .library-card {
        background: rgba(206, 226, 224, 0.61);
        border: 1px solid #f6ad87;
        color: rgba(0, 0, 0, 0.8);
        margin-bottom: 2rem;
        width: 350px;
        padding: 15px;
        border-radius: 10px;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        padding: 20px 0;
        width: 100%;
        justify-content: flex-start;
    }

    .col-md-4 {
        flex: 0 0 calc(50% - 20px);
        max-width: 350px;
    }

    .library-card img.card-img-top {
        width: 100%;
        height: 300px;
        object-fit: contain;
        padding: 10px;
    }

    button {
        margin: 0 auto 0 auto;
        width: 10em;
        height: 3em;
        font-size: 0.8em;
        color: #fff;
        font-weight: bold;
        cursor: pointer;
        border: none;
        border-radius: 0.35em;
        transition: all cubic-bezier(0, 0, 0.2, 1) 0.3s;
        box-shadow: 0 1px 3px 0px rgba(0, 0, 0, 0.3);
    }

    .push {
        margin-bottom: 26px;
        box-shadow: 0 26px 15px 0px rgba(0, 0, 0, 0.15);
    }

    .black {
        background: #f6ad87;
        margin-bottom: 10px;
    }

    .delete-btn {
        background: #dc3545;
    }

    .btn-container {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }
</style>

<div class="container">
    <h2 class="text-center mb-4">My Library</h2>

    <!-- Purchased Books -->
    <div>
        <h3 class="mb-3">Books purchased</h3>
        @if (!Model.PurchasedBooks.Any())
        {
            <div class="alert alert-info">No books purchased.</div>
        }
        else
        {
            <div class="row">
                @foreach (var item in Model.PurchasedBooks)
                {
                    <div class="col-md-4 mb-4">
                        <div class="library-card">
                            @if (!string.IsNullOrEmpty(item.Book.CoverImageUrl))
                            {
                                <img src="@item.Book.CoverImageUrl" class="card-img-top" alt="@item.Book.Title">
                            }
                            <div class="card-body">
                                <h5 class="card-title">@item.Book.Title</h5>
                                <p class="card-text">
                                    From: @item.Book.Author <br />
                                    Expenditure: @item.Book.Publisher <br />
                                    Year of publication: @item.Book.PublishYear <br />
                                    Genre: @item.Book.Genre
                                </p>
                                <div class="btn-container">
                                    <button class="black" type="button" onclick="showBookFormats(@item.BookId)">
                                        Download book
                                    </button>
                                    <button class="black delete-btn" type="button" onclick="confirmDeleteBook(@item.BookId)">
                                        Remove book
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>

    <!-- Borrowed Books -->
    <div>
        <h3 class="mb-3">Borrowed books</h3>
        @if (!Model.BorrowedBooks.Any())
        {
            <div class="alert alert-info">There are no borrowed books.</div>
        }
        else
        {
            <div class="row">
                @foreach (var item in Model.BorrowedBooks)
                {
                    var daysLeft = (item.Order.OrderDate.AddDays(30) - DateTime.Now).Days;
                    <div class="col-md-4 mb-4">
                        <div class="library-card">
                            @if (!string.IsNullOrEmpty(item.Book.CoverImageUrl))
                            {
                                <img src="@item.Book.CoverImageUrl" class="card-img-top" alt="@item.Book.Title">
                            }
                            <div class="card-body">
                                <h5 class="card-title">@item.Book.Title</h5>
                                <p class="card-text">
                                    From: @item.Book.Author <br />
                                    Expenditure: @item.Book.Publisher <br />
                                    Year of publication: @item.Book.PublishYear <br />
                                    Genre: @item.Book.Genre <br/>
                                    @daysLeft Days left
                                </p>
                                <div class="btn-container">
                                    <button class="black" type="button" onclick="showBookFormats(@item.BookId)">
                                        Download book
                                    </button>
                                    <button class="black delete-btn" type="button" onclick="confirmDeleteBook(@item.BookId)">
                                        Remove book
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>

    <!-- Download Format Modal -->
    <div class="modal fade" id="bookDownloadModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Select Download Format</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <select id="formatSelect" class="form-select mb-3">
                    </select>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="downloadBook()">Download</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteConfirmModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to remove this book from your library?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" onclick="deleteBook()">Remove</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function showBookFormats(bookId) {
        $.ajax({
            url: '@Url.Action("GetBookFormats", "MyLibrary")',
            type: 'GET',
            data: { bookId: bookId },
            success: function(response) {
                if (response.success) {
                    var formatSelect = $('#formatSelect');
                    formatSelect.empty();

                    response.formats.forEach(function(formatInfo) {
                        formatSelect.append(
                            $('<option>', {
                                value: formatInfo.url,
                                text: formatInfo.format
                            })
                        );
                    });

                    $('#bookDownloadModal').attr('data-book-id', bookId);
                    $('#bookDownloadModal').modal('show');
                } else {
                    alert(response.message);
                }
            },
            error: function() {
                alert('Error loading formats');
            }
        });
    }

    function downloadBook() {
        var downloadUrl = $('#formatSelect').val();

        if (!downloadUrl) {
            alert('Please select a format');
            return;
        }

        window.open(downloadUrl, '_blank');
        $('#bookDownloadModal').modal('hide');
    }

    let bookIdToDelete = null;

    function confirmDeleteBook(bookId) {
        bookIdToDelete = bookId;
        $('#deleteConfirmModal').modal('show');
    }

    function deleteBook() {
        if (!bookIdToDelete) return;

        $.ajax({
            url: '@Url.Action("DeleteBook", "MyLibrary")',
            type: 'POST',
            data: { bookId: bookIdToDelete },
            success: function(response) {
                if (response.success) {
                    location.reload();
                } else {
                    alert(response.message || 'Error removing book');
                }
            },
            error: function() {
                alert('Error removing book from library');
            },
            complete: function() {
                $('#deleteConfirmModal').modal('hide');
                bookIdToDelete = null;
            }
        });
    }
</script>
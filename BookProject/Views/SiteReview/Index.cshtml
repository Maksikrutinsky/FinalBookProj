@model IEnumerable<BookProject.Models.SiteReviewViewModel>

@{
    ViewBag.Title = "Site Reviews";
}

<div class="reviews-container">
    <div class="page-title-wrapper">
        <h2 class="reviews-title">Site Reviews</h2>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-error">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (Session["UserId"] != null)
    {
        if(ViewBag.HasOrderOrBorrow == false)
        {
            <div class="alert alert-info">
                <i class="fas fa-info-circle"></i>
                You need to purchase or borrow a book before you can leave a review.
            </div>
        }
        else if (ViewBag.CanAddReview)
        {
            <div class="add-review-btn">
                @Html.ActionLink("Add Review", "Create", null, new { @class = "btn-primary" })
            </div>
        }
        else
        {
            <div class="alert alert-info">
                <i class="fas fa-check-circle"></i>
                You have already submitted a review.
            </div>
        }
    }

    <div class="reviews-grid">
        @if (Model != null && Model.Any())
        {
            foreach (var review in Model)
            {
                <div class="review-card">
                    <div class="review-header">
                        <div class="user-info">
                            <div class="avatar">@review.Username.Substring(0, 1)</div>
                            <h5>@review.Username</h5>
                        </div>
                        <div class="rating">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="fas fa-star @(i <= review.RatingValue ? "star-filled" : "star-empty")"></i>
                            }
                        </div>
                    </div>
                    <div class="review-content">
                        <p>@review.Comment</p>
                    </div>
                    <div class="review-footer">
                        <time datetime="@(review.CreatedAt.HasValue ? review.CreatedAt.Value.ToString("yyyy-MM-dd") : "")">
                            @(review.CreatedAt.HasValue ? review.CreatedAt.Value.ToString("dd/MM/yyyy") : "")
                        </time>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-reviews">
                <i class="fas fa-book-reader"></i>
                <p>No reviews yet. Be the first to write one!</p>
            </div>
        }
    </div>
</div>

<style>
    .page-title-wrapper {
        text-align: center;
        padding: 2rem 0;
        margin-bottom: 2rem;
        background: transparent;
        border-radius: 12px;
    }

    .reviews-title {
        font-size: 2.5rem;
        font-weight: 800;
        color: #1e293b;
        position: relative;
        padding-bottom: 1rem;
        text-transform: uppercase;
        letter-spacing: 2px;
        display: inline-block;
    }

    .reviews-title::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 100px;
        height: 4px;
        background: linear-gradient(to right, #2563eb, #1d4ed8);
        border-radius: 2px;
    }

    .reviews-title::before {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 20px;
        height: 4px;
        background: #2563eb;
        border-radius: 2px;
        animation: slideLine 2s infinite;
    }

    keyframes slideLine {
        0% {
            left: 35%;
        }
        50% {
            left: 65%;
        }
        100% {
            left: 35%;
        }
    }

    .reviews-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1.5rem;
    }

    .reviews-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        padding: 1rem 0;
    }

    .review-card {
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        overflow: hidden;
    }

    .review-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }

    .review-header {
        padding: 1.5rem;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .user-info h5 {
        margin: 0;
        font-size: 1.1rem;
        color: #1e293b;
    }

    .avatar {
        width: 40px;
        height: 40px;
        background: #2563eb;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
        text-transform: uppercase;
    }

    .rating {
        display: flex;
        gap: 4px;
    }

    .star-filled {
        color: #fbbf24;
    }

    .star-empty {
        color: #e5e7eb;
    }

    .review-content {
        padding: 1.5rem;
        color: #1e293b;
        line-height: 1.6;
    }

    .review-content p {
        margin: 0;
    }

    .review-footer {
        padding: 1rem 1.5rem;
        background: #f8fafc;
        color: #64748b;
        font-size: 0.875rem;
    }

    .alert {
        padding: 1rem 1.5rem;
        border-radius: 12px;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .alert-success {
        background: rgba(5, 150, 105, 0.1);
        color: #059669;
    }

    .alert-error {
        background: rgba(220, 38, 38, 0.1);
        color: #dc2626;
    }

    .alert-info {
        background: rgba(2, 132, 199, 0.1);
        color: #0284c7;
    }

    .add-review-btn {
        margin: 2rem 0;
        text-align: center;
    }

    .btn-primary {
        background: #2563eb;
        color: white;
        padding: 0.75rem 2rem;
        border-radius: 12px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        display: inline-block;
    }

    .btn-primary:hover {
        background: #1d4ed8;
        transform: translateY(-2px);
    }

    .no-reviews {
        grid-column: 1 / -1;
        text-align: center;
        padding: 4rem 2rem;
        color: #64748b;
    }

    .no-reviews i {
        font-size: 3rem;
        margin-bottom: 1rem;
    }

    @@media (max-width: 768px) {
    .reviews-title {
        font-size: 2rem;
    }

    .reviews-grid {
        grid-template-columns: 1fr;
    }

    .reviews-container {
        padding: 0 1rem;
    }

    .review-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }

    .rating {
        align-self: flex-end;
    }
    }
</style>